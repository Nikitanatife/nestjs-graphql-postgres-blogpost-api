# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Blog {
  author: User!
  blogPosts: [BlogPost!]!
  createdAt: DateTime!
  description: String!
  id: ID!
  title: String!
  updatedAt: DateTime!
}

type BlogPost {
  author: User!
  blog: Blog!
  content: String!
  createdAt: DateTime!
  description: String!
  id: ID!
  title: String!
  updatedAt: DateTime!
}

input ChangePasswordInput {
  password: String!
}

input CreateBlogInput {
  description: String!
  title: String!
}

input CreateBlogPostInput {
  blogId: Int!
  content: String!
  description: String!
  title: String!
}

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  role: UserRoles! = WRITER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(changePasswordInput: ChangePasswordInput!): Boolean!
  createBlog(createBlogInput: CreateBlogInput!): Blog!
  createBlogPost(createBlogPostInput: CreateBlogPostInput!): BlogPost!
  login(loginInput: LoginInput!): User!
  register(registerInput: CreateUserInput!): User!
  removeBlog(id: Int!): Boolean!
  removeBlogPost(id: Int!): Boolean!
  removeUser: Boolean!
  updateBlog(updateBlogInput: UpdateBlogInput!): Blog!
  updateBlogPost(updateBlogPostInput: UpdateBlogPostInput!): BlogPost!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Query {
  findAllBlogPostsByBlogId(blogId: Int!): [BlogPost!]!
  findAllBlogs(authorId: Int): [Blog!]!
  findBlogById(id: Int!): Blog!
  findBlogPostById(id: Int!): BlogPost!
  logout: Boolean!
}

input UpdateBlogInput {
  description: String
  id: Int!
  title: String
}

input UpdateBlogPostInput {
  content: String
  description: String
  id: Int!
  title: String
}

input UpdateUserInput {
  email: String
  firstName: String
  lastName: String
}

type User {
  blogPosts: [BlogPost!]
  blogs: [Blog!]
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  role: UserRoles!
  token: String
  updatedAt: DateTime!
}

enum UserRoles {
  MODERATOR
  WRITER
}